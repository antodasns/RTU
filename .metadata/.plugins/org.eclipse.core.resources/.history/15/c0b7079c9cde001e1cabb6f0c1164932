package com.application.rtu.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

import com.application.rtu.common.RtuCommon;

@Configuration
public class SecurityConfig {

    @Bean
    SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
        	.authorizeHttpRequests(requests -> requests
                        .anyRequest().authenticated())
                .httpBasic();
        return http.build();
    }
    
    @Bean
    UserDetailsService users() {
    	
    	UserDetails admin =User.builder()
    			.username("admin")
    			.password(RtuCommon.bCryptPasswordEncoder("adminpass"))
    			.roles("ADMIN")
    			.build();
    	
    	UserDetails user =User.builder()
    			.username("admin")
    			.password(RtuCommon.bCryptPasswordEncoder("adminpass"))
    			.roles("USER")
    			.build();
    	
    	return new InMemoryUserDetailsManager(admin,user);
    	
    }


}
