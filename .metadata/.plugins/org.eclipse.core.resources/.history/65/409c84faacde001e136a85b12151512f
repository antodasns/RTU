package com.application.rtu.entity;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.Set;
import java.util.stream.Collectors;

public class User implements UserDetails {
    private Long id;
    private String username;
    private String password;
    private Set<Role> roles;

    // Constructors, getters, setters, and other methods

    // Assuming you have a Role class
    public static class Role {
        private Long id;
        private String name;

        // Constructors, getters, setters, and other methods
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return roles.stream()
                .map(role -> new SimpleGrantedAuthority("ROLE_" + role.getName()))
                .collect(Collectors.toList());
    }

    @Override
    public String getPassword() {
        return password;
    }

    @Override
    public String getUsername() {
        return username;
    }

    @Override
    public boolean isAccountNonExpired() {
        // Implement as needed
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        // Implement as needed
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        // Implement as needed
        return true;
    }

    @Override
    public boolean isEnabled() {
        // Implement as needed
        return true;
    }
}
