{"ast":null,"code":"import axios from \"axios\";\nimport { parseJwt } from '../misc/Helpers';\nconst TASK_API_BASE_URL = \"http://localhost:8080\";\nconst instance = axios.create({\n  baseURL: TASK_API_BASE_URL\n});\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1];\n    const data = parseJwt(token);\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\";\n    }\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`;\n}\nclass TaskService {\n  authenticate(username, password) {\n    return instance.post('/authenticate', {\n      username,\n      password\n    }, {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n  }\n  bearerAuth(user) {\n    return `Bearer ${user.accessToken}`;\n  }\n  saveTask(task) {\n    return instance.post(TASK_API_BASE_URL + \"/rtu/api/saveTask\", task);\n  }\n  saveFlow(flow) {\n    console.log(flow);\n    return axios.post(TASK_API_BASE_URL + \"/saveFlow\", flow, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  getFlow(flowId) {\n    return axios.get(TASK_API_BASE_URL + \"/rtu/api/getFlow/\" + flowId);\n  }\n  getFiles() {\n    return axios.get(TASK_API_BASE_URL + \"/getFiles\");\n  }\n  getFilesByUser(username, user) {\n    const url = \"/rtu/api/getFilesByUser/\" + username;\n    return instance.get(url, {\n      headers: {\n        'Authorization': bearerAuth(user)\n      }\n    });\n  }\n  getFile(fileId) {\n    return axios.get(TASK_API_BASE_URL + \"/getFile/\" + fileId);\n  }\n  forward(fileId) {\n    return axios.get(TASK_API_BASE_URL + \"/forward/\" + fileId);\n  }\n}\nexport default new TaskService();","map":{"version":3,"names":["axios","parseJwt","TASK_API_BASE_URL","instance","create","baseURL","interceptors","request","use","config","headers","Authorization","token","split","data","Date","now","exp","window","location","href","error","Promise","reject","bearerAuth","user","accessToken","TaskService","authenticate","username","password","post","saveTask","task","saveFlow","flow","console","log","getFlow","flowId","get","getFiles","getFilesByUser","url","getFile","fileId","forward"],"sources":["C:/Users/antod/Workspaces/rtu/rtu-frontend/src/services/TaskService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { parseJwt } from '../misc/Helpers'\r\n\r\nconst TASK_API_BASE_URL=\"http://localhost:8080\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: TASK_API_BASE_URL\r\n})\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n  // If token is expired, redirect user to login\r\n  if (config.headers.Authorization) {\r\n    const token = config.headers.Authorization.split(' ')[1]\r\n    const data = parseJwt(token)\r\n    if (Date.now() > data.exp * 1000) {\r\n      window.location.href = \"/login\"\r\n    }\r\n  }\r\n  return config\r\n}, function (error) {\r\n  return Promise.reject(error)\r\n})\r\n\r\n\r\nfunction bearerAuth(user) {\r\n  return `Bearer ${user.accessToken}`\r\n}\r\n\r\nclass TaskService{\r\n\r\n   authenticate(username, password) {\r\n\r\n    return instance.post('/authenticate', {username,password}, {\r\n      headers: { 'Content-type': 'application/json' }\r\n    })\r\n  }\r\n  \r\n   bearerAuth(user) {\r\n    return `Bearer ${user.accessToken}`\r\n  }\r\n\r\n    saveTask(task){\r\n        return instance.post(TASK_API_BASE_URL+\"/rtu/api/saveTask\",task)\r\n    }\r\n\r\n    saveFlow(flow){\r\n\r\n        console.log(flow);\r\n        return axios.post(TASK_API_BASE_URL+\"/saveFlow\", flow, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          })\r\n    }\r\n\r\n    getFlow(flowId){\r\n\r\n      return axios.get(TASK_API_BASE_URL+\"/rtu/api/getFlow/\"+flowId)\r\n\r\n    }\r\n\r\n    getFiles(){\r\n\r\n      return axios.get(TASK_API_BASE_URL+\"/getFiles\")\r\n\r\n    }\r\n\r\n    getFilesByUser(username,user){\r\n\r\n      const url = \"/rtu/api/getFilesByUser/\"+username\r\n      return instance.get(url, {\r\n        headers: { 'Authorization': bearerAuth(user) }\r\n      })\r\n\r\n    }\r\n\r\n    getFile(fileId){\r\n\r\n      return axios.get(TASK_API_BASE_URL+\"/getFile/\"+fileId)\r\n\r\n    }\r\n\r\n    forward(fileId){\r\n\r\n      return axios.get(TASK_API_BASE_URL+\"/forward/\"+fileId)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new TaskService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,MAAMC,iBAAiB,GAAC,uBAAuB;AAE/C,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC5BC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEFC,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAClD;EACA,IAAIA,MAAM,CAACC,OAAO,CAACC,aAAa,EAAE;IAChC,MAAMC,KAAK,GAAGH,MAAM,CAACC,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxD,MAAMC,IAAI,GAAGb,QAAQ,CAACW,KAAK,CAAC;IAC5B,IAAIG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,IAAI,CAACG,GAAG,GAAG,IAAI,EAAE;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF;EACA,OAAOX,MAAM;AACf,CAAC,EAAE,UAAUY,KAAK,EAAE;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAGF,SAASG,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAQ,UAASA,IAAI,CAACC,WAAY,EAAC;AACrC;AAEA,MAAMC,WAAW;EAEdC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAEhC,OAAO3B,QAAQ,CAAC4B,IAAI,CAAC,eAAe,EAAE;MAACF,QAAQ;MAACC;IAAQ,CAAC,EAAE;MACzDpB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;EACJ;EAECc,UAAUA,CAACC,IAAI,EAAE;IAChB,OAAQ,UAASA,IAAI,CAACC,WAAY,EAAC;EACrC;EAEEM,QAAQA,CAACC,IAAI,EAAC;IACV,OAAO9B,QAAQ,CAAC4B,IAAI,CAAC7B,iBAAiB,GAAC,mBAAmB,EAAC+B,IAAI,CAAC;EACpE;EAEAC,QAAQA,CAACC,IAAI,EAAC;IAEVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOnC,KAAK,CAAC+B,IAAI,CAAC7B,iBAAiB,GAAC,WAAW,EAAEiC,IAAI,EAAE;MACnDzB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACR;EAEA4B,OAAOA,CAACC,MAAM,EAAC;IAEb,OAAOvC,KAAK,CAACwC,GAAG,CAACtC,iBAAiB,GAAC,mBAAmB,GAACqC,MAAM,CAAC;EAEhE;EAEAE,QAAQA,CAAA,EAAE;IAER,OAAOzC,KAAK,CAACwC,GAAG,CAACtC,iBAAiB,GAAC,WAAW,CAAC;EAEjD;EAEAwC,cAAcA,CAACb,QAAQ,EAACJ,IAAI,EAAC;IAE3B,MAAMkB,GAAG,GAAG,0BAA0B,GAACd,QAAQ;IAC/C,OAAO1B,QAAQ,CAACqC,GAAG,CAACG,GAAG,EAAE;MACvBjC,OAAO,EAAE;QAAE,eAAe,EAAEc,UAAU,CAACC,IAAI;MAAE;IAC/C,CAAC,CAAC;EAEJ;EAEAmB,OAAOA,CAACC,MAAM,EAAC;IAEb,OAAO7C,KAAK,CAACwC,GAAG,CAACtC,iBAAiB,GAAC,WAAW,GAAC2C,MAAM,CAAC;EAExD;EAEAC,OAAOA,CAACD,MAAM,EAAC;IAEb,OAAO7C,KAAK,CAACwC,GAAG,CAACtC,iBAAiB,GAAC,WAAW,GAAC2C,MAAM,CAAC;EAExD;AAEJ;AAEA,eAAe,IAAIlB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}