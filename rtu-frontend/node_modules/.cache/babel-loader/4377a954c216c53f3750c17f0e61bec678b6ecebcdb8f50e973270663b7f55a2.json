{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antod\\\\React\\\\rtu\\\\src\\\\pagecomponents\\\\FlowListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FlowBox from '../components/FlowBox';\nimport axios from 'axios';\nimport ButtonField from \"../components/ButtonField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowListing = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const handleInputChange = (sectionIndex, fieldName, value) => {\n    setFormDataArray(prevData => {\n      const newData = [...prevData];\n      newData[sectionIndex] = {\n        ...newData[sectionIndex],\n        [fieldName]: value\n      };\n      return newData;\n    });\n  };\n  const handleAddSection = () => {\n    setFormDataArray(prevData => [...prevData, {}]);\n  };\n  const handleSubmit = () => {\n    // Combine data from all sections\n    const combinedFormData = formDataArray.reduce((acc, sectionData, index) => {\n      const sectionKeyPrefix = `section${index + 1}`;\n      Object.keys(sectionData).forEach(field => {\n        acc[`${sectionKeyPrefix}_${field}`] = sectionData[field];\n      });\n      return acc;\n    }, {});\n    console.log(combinedFormData);\n\n    // Use Axios to submit the form data\n    // axios.post('your_api_endpoint', combinedFormData)\n    //   .then((response) => {\n    //     console.log('Form submitted successfully', response.data);\n    //   })\n    //   .catch((error) => {\n    //     console.error('Error submitting form', error);\n    //   });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Configure User Flow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), formDataArray.map((formData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Flow \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FlowBox, {\n        formData: formData,\n        handleInputChange: (fieldName, value) => handleInputChange(index, fieldName, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSection,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"h-8 w-8 text-red-500\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          \"stroke-width\": \"2\",\n          d: \"M12 4v16m8-8H4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n      id: \"saveId\",\n      value: \"Save\",\n      buttonfunction: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowListing, \"S6OCOrCbZmkI9LQetc9FhGyB8IA=\");\n_c = FlowListing;\nexport default FlowListing;\nvar _c;\n$RefreshReg$(_c, \"FlowListing\");","map":{"version":3,"names":["React","useState","FlowBox","axios","ButtonField","jsxDEV","_jsxDEV","FlowListing","_s","formDataArray","setFormDataArray","handleInputChange","sectionIndex","fieldName","value","prevData","newData","handleAddSection","handleSubmit","combinedFormData","reduce","acc","sectionData","index","sectionKeyPrefix","Object","keys","forEach","field","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","formData","onClick","class","fill","viewBox","stroke","d","id","buttonfunction","_c","$RefreshReg$"],"sources":["C:/Users/antod/React/rtu/src/pagecomponents/FlowListing.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FlowBox from '../components/FlowBox';\r\nimport axios from 'axios';\r\nimport ButtonField from \"../components/ButtonField\";\r\n\r\nconst FlowListing = () => {\r\n\r\n  const [formDataArray, setFormDataArray] = useState([]);\r\n\r\n  const handleInputChange = (sectionIndex, fieldName, value) => {\r\n    setFormDataArray((prevData) => {\r\n      const newData = [...prevData];\r\n      newData[sectionIndex] = { ...newData[sectionIndex], [fieldName]: value };\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleAddSection = () => {\r\n    setFormDataArray((prevData) => [...prevData, {}]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Combine data from all sections\r\n    const combinedFormData = formDataArray.reduce((acc, sectionData, index) => {\r\n      const sectionKeyPrefix = `section${index + 1}`;\r\n      Object.keys(sectionData).forEach((field) => {\r\n        acc[`${sectionKeyPrefix}_${field}`] = sectionData[field];\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    console.log(combinedFormData);\r\n\r\n    // Use Axios to submit the form data\r\n    // axios.post('your_api_endpoint', combinedFormData)\r\n    //   .then((response) => {\r\n    //     console.log('Form submitted successfully', response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error submitting form', error);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <div >\r\n    <h1 className=\"text-3xl font-bold mb-4\">Configure User Flow</h1>\r\n      {formDataArray.map((formData, index) => (\r\n        <div key={index}>\r\n          <h2>Flow {index + 1}</h2>\r\n          <FlowBox\r\n            formData={formData}\r\n            handleInputChange={(fieldName, value) => handleInputChange(index, fieldName, value)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddSection}>\r\n        <svg class=\"h-8 w-8 text-red-500\"  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"/>\r\n        </svg>\r\n      </button>\r\n      <ButtonField id=\"saveId\" value=\"Save\" buttonfunction={handleSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowListing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}