{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antod\\\\React\\\\rtu\\\\src\\\\pagecomponents\\\\FlowListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FlowBox from '../components/FlowBox';\nimport axios from 'axios';\nimport ButtonField from \"../components/ButtonField\";\nimport TaskService from \"../services/TaskService\";\nimport CircularJSON from 'circular-json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowListing = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const handleInputChange = (sectionIndex, fieldName, value) => {\n    setFormDataArray(prevData => {\n      const newData = [...prevData];\n      newData[sectionIndex] = {\n        ...newData[sectionIndex],\n        [fieldName]: value\n      };\n      return newData;\n    });\n  };\n  const handleAddSection = () => {\n    setFormDataArray(prevData => [...prevData, {}]);\n  };\n  const handleSubmit = () => {\n    // Combine data from all sections\n    const combinedFormData = formDataArray.reduce((acc, sectionData, index) => {\n      const sectionKeyPrefix = `section${index + 1}`;\n      Object.keys(sectionData).forEach(field => {\n        // Construct key as 'sectionX_field' and value as the selected option\n\n        const key = `${sectionKeyPrefix}_${field}`;\n        const value = sectionData[field];\n        acc[key] = value;\n        console.log(value);\n      });\n      return acc;\n    }, {});\n    const flow = CircularJSON.stringify(combinedFormData);\n    TaskService.saveFlow(flow).then(response => {}).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Configure User Flow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), formDataArray.map((formData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Flow \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FlowBox, {\n        formData: formData,\n        handleInputChange: (fieldName, value) => handleInputChange(index, fieldName, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSection,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"h-8 w-8 text-red-500\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          \"stroke-width\": \"2\",\n          d: \"M12 4v16m8-8H4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n      id: \"saveId\",\n      value: \"Save\",\n      buttonfunction: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowListing, \"S6OCOrCbZmkI9LQetc9FhGyB8IA=\");\n_c = FlowListing;\nexport default FlowListing;\nvar _c;\n$RefreshReg$(_c, \"FlowListing\");","map":{"version":3,"names":["React","useState","FlowBox","axios","ButtonField","TaskService","CircularJSON","jsxDEV","_jsxDEV","FlowListing","_s","formDataArray","setFormDataArray","handleInputChange","sectionIndex","fieldName","value","prevData","newData","handleAddSection","handleSubmit","combinedFormData","reduce","acc","sectionData","index","sectionKeyPrefix","Object","keys","forEach","field","key","console","log","flow","stringify","saveFlow","then","response","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","formData","onClick","class","fill","viewBox","stroke","d","id","buttonfunction","_c","$RefreshReg$"],"sources":["C:/Users/antod/React/rtu/src/pagecomponents/FlowListing.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FlowBox from '../components/FlowBox';\r\nimport axios from 'axios';\r\nimport ButtonField from \"../components/ButtonField\";\r\nimport TaskService from \"../services/TaskService\";\r\nimport CircularJSON from 'circular-json';\r\n\r\nconst FlowListing = () => {\r\n\r\n  const [formDataArray, setFormDataArray] = useState([]);\r\n\r\n  const handleInputChange = (sectionIndex, fieldName, value) => {\r\n    setFormDataArray((prevData) => {\r\n      const newData = [...prevData];\r\n      newData[sectionIndex] = { ...newData[sectionIndex], [fieldName]: value };\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleAddSection = () => {\r\n    setFormDataArray((prevData) => [...prevData, {}]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Combine data from all sections\r\n    const combinedFormData = formDataArray.reduce((acc, sectionData, index) => {\r\n      const sectionKeyPrefix = `section${index + 1}`;\r\n      Object.keys(sectionData).forEach((field) => {\r\n        // Construct key as 'sectionX_field' and value as the selected option\r\n\r\n        \r\n        const key = `${sectionKeyPrefix}_${field}`;\r\n        const value = sectionData[field];\r\n        acc[key] = value;\r\n        console.log(value);\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    const flow = CircularJSON.stringify(combinedFormData);\r\n\r\n    TaskService.saveFlow(flow)\r\n      .then((response) => {\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <div >\r\n    <h1 className=\"text-3xl font-bold mb-4\">Configure User Flow</h1>\r\n      {formDataArray.map((formData, index) => (\r\n        <div key={index}>\r\n          <h2>Flow {index + 1}</h2>\r\n          <FlowBox\r\n            formData={formData}\r\n            handleInputChange={(fieldName, value) => handleInputChange(index, fieldName, value)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddSection}>\r\n        <svg class=\"h-8 w-8 text-red-500\"  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"/>\r\n        </svg>\r\n      </button>\r\n      <ButtonField id=\"saveId\" value=\"Save\" buttonfunction={handleSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowListing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}